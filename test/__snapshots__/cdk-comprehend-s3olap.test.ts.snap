// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`comprehend-s3olap test 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4ArtifactHashCB97A4BE": Object {
      "Description": "Artifact hash for asset \\"43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4\\"",
      "Type": "String",
    },
    "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4S3Bucket3A2B0B46": Object {
      "Description": "S3 bucket for asset \\"43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4\\"",
      "Type": "String",
    },
    "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4S3VersionKey7A50E10B": Object {
      "Description": "S3 key for asset version \\"43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A": Object {
      "Description": "Artifact hash for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F": Object {
      "Description": "S3 bucket for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626": Object {
      "Description": "S3 key for asset version \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4ArtifactHash838A300A": Object {
      "Description": "Artifact hash for asset \\"5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4\\"",
      "Type": "String",
    },
    "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3BucketDCC0FE97": Object {
      "Description": "S3 bucket for asset \\"5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4\\"",
      "Type": "String",
    },
    "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0": Object {
      "Description": "S3 key for asset version \\"5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4S3Bucket3A2B0B46",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4S3VersionKey7A50E10B",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4S3VersionKey7A50E10B",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabAccessControlS3AccessPoint741A46A9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabSurveyResultBucketAED4B852",
        },
        "Name": "accessctl-s3-ap-survey-results-unknown-pii-0u8jyh",
      },
      "Type": "AWS::S3::AccessPoint",
    },
    "ComprehendS3olabAdminLambdaAccessPointB8F61F10": Object {
      "DependsOn": Array [
        "ComprehendS3olabAdminLambdaCaptorAdminGeneralSearchUnit9AA00991",
        "ComprehendS3olabAdminLambdaCaptorArnExpert9DD378D3",
        "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA",
        "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEventLogRetentionE1302F55",
        "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEvent95DA3E51",
      ],
      "Properties": Object {
        "Name": "admin-s3olap-call-transcripts-known-pii",
        "ObjectLambdaConfiguration": Object {
          "SupportingAccessPoint": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":s3:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":accesspoint/admin-s3-access-point-call-transcripts-known-pii-3",
              ],
            ],
          },
          "TransformationConfigurations": Array [
            Object {
              "Actions": Array [
                "GetObject",
              ],
              "ContentTransformation": Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabAdminObjectLambdaConfig548D7518",
                  "Value",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::S3ObjectLambda::AccessPoint",
    },
    "ComprehendS3olabAdminLambdaCaptorAdminGeneralSearchUnit9AA00991": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
      ],
      "Properties": Object {
        "Genre": "Admin",
        "LambdaFixedName": "PiiRedactionFunction",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEvent95DA3E51",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabAdminLambdaCaptorArnExpert9DD378D3": Object {
      "DependsOn": Array [
        "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA",
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3BucketDCC0FE97",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "A Lambda function that gets the ARN of \`PiiRedactionFunction\`",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "An execution role to find out the ARN of the access control Lambda.",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "lambda:ListFunctions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ListLambdaPermissions",
                },
                Object {
                  "Action": Array [
                    "lambda:GetFunction",
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:*",
                      ],
                    ],
                  },
                  "Sid": "GetLambdaFunctionsPermissions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ComprehendS3ObjectLambdaCustomResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEvent95DA3E51": Object {
      "DependsOn": Array [
        "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA",
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (ker-ker/ComprehendS3olab/AdminLambdaCaptor/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "ComprehendS3olabAdminLambdaCaptorArnExpert9DD378D3",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabAdminLambdaCaptorCRRoleA643A3EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEventLogRetentionE1302F55": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
      ],
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ComprehendS3olabAdminLambdaCaptorProviderframeworkonEvent95DA3E51",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ComprehendS3olabAdminObjectLambdaConfig548D7518": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"AwsLambda\\":{\\"FunctionArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabAdminLambdaCaptorAdminGeneralSearchUnit9AA00991",
                  "LambdaArn",
                ],
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabAdminRedactionAdminRoleD5BCEEB1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingObjects",
                },
                Object {
                  "Action": Array [
                    "s3:GetAccessPointForObjectLambda",
                    "s3:GetAccessPointConfigurationForObjectLambda",
                    "s3:ListAccessPointsForObjectLambda",
                    "s3:ListAllMyBuckets",
                    "s3:ListAccessPoints",
                    "s3:GetAccessPoint",
                    "s3:GetAccountPublicAccessBlock",
                    "s3:GetBucketPublicAccessBlock",
                    "s3:GetBucketPolicyStatus",
                    "s3:GetBucketAcl",
                    "s3:GetAccessPointPolicyStatus",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingBucketsAndAccessPoints",
                },
                Object {
                  "Action": Array [
                    "s3-object-lambda:Get*",
                    "s3-object-lambda:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":s3-object-lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":accesspoint/admin-s3olap-call-transcripts-known-pii",
                      ],
                    ],
                  },
                  "Sid": "AllowObjectLambdaAccess",
                },
                Object {
                  "Action": Array [
                    "s3:Get*",
                    "s3:List*",
                  ],
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowStandardAccessPointAccess",
                },
                Object {
                  "Action": "lambda:InvokeFunction",
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowLambdaInvocation",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "admin-role-s3olap-policy",
          },
        ],
        "RoleName": "RedactionAdminRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabAdminS3AccessPoint607AB429": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabTranscriptBucket53AA37B3",
        },
        "Name": "admin-s3-access-point-call-transcripts-known-pii-3",
      },
      "Type": "AWS::S3::AccessPoint",
    },
    "ComprehendS3olabBillingCaptorArnExpert617FB5DF": Object {
      "DependsOn": Array [
        "ComprehendS3olabBillingCaptorCRRoleE612C781",
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3BucketDCC0FE97",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "A Lambda function that gets the ARN of \`PiiRedactionFunction\`",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabBillingCaptorCRRoleE612C781",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabBillingCaptorBillingGeneralSearchUnit941A41AE": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
      ],
      "Properties": Object {
        "Genre": "Billing",
        "LambdaFixedName": "PiiRedactionFunction",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabBillingCaptorProviderframeworkonEvent825779C3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabBillingCaptorCRRoleE612C781": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "An execution role to find out the ARN of the access control Lambda.",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "lambda:ListFunctions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ListLambdaPermissions",
                },
                Object {
                  "Action": Array [
                    "lambda:GetFunction",
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:*",
                      ],
                    ],
                  },
                  "Sid": "GetLambdaFunctionsPermissions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ComprehendS3ObjectLambdaCustomResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabBillingCaptorProviderframeworkonEvent825779C3": Object {
      "DependsOn": Array [
        "ComprehendS3olabBillingCaptorCRRoleE612C781",
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (ker-ker/ComprehendS3olab/BillingCaptor/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "ComprehendS3olabBillingCaptorArnExpert617FB5DF",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabBillingCaptorCRRoleE612C781",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabBillingCaptorProviderframeworkonEventLogRetentionC7A839F4": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
      ],
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ComprehendS3olabBillingCaptorProviderframeworkonEvent825779C3",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ComprehendS3olabBillingLambdaAccessPointFA19F8A0": Object {
      "DependsOn": Array [
        "ComprehendS3olabBillingCaptorArnExpert617FB5DF",
        "ComprehendS3olabBillingCaptorBillingGeneralSearchUnit941A41AE",
        "ComprehendS3olabBillingCaptorCRRoleE612C781",
        "ComprehendS3olabBillingCaptorProviderframeworkonEventLogRetentionC7A839F4",
        "ComprehendS3olabBillingCaptorProviderframeworkonEvent825779C3",
      ],
      "Properties": Object {
        "Name": "billing-s3olap-call-transcripts-known-pii",
        "ObjectLambdaConfiguration": Object {
          "SupportingAccessPoint": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":s3:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":accesspoint/bill-s3-access-point-call-transcripts-known-pii-70",
              ],
            ],
          },
          "TransformationConfigurations": Array [
            Object {
              "Actions": Array [
                "GetObject",
              ],
              "ContentTransformation": Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabBillingObjectLambdaConfig384DA850",
                  "Value",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::S3ObjectLambda::AccessPoint",
    },
    "ComprehendS3olabBillingObjectLambdaConfig384DA850": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"AwsLambda\\":{\\"FunctionArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabBillingCaptorBillingGeneralSearchUnit941A41AE",
                  "LambdaArn",
                ],
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabBillingRedactionBillingRole41091C3B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingObjects",
                },
                Object {
                  "Action": Array [
                    "s3:GetAccessPointForObjectLambda",
                    "s3:GetAccessPointConfigurationForObjectLambda",
                    "s3:ListAccessPointsForObjectLambda",
                    "s3:ListAllMyBuckets",
                    "s3:ListAccessPoints",
                    "s3:GetAccessPoint",
                    "s3:GetAccountPublicAccessBlock",
                    "s3:GetBucketPublicAccessBlock",
                    "s3:GetBucketPolicyStatus",
                    "s3:GetBucketAcl",
                    "s3:GetAccessPointPolicyStatus",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingBucketsAndAccessPoints",
                },
                Object {
                  "Action": Array [
                    "s3-object-lambda:Get*",
                    "s3-object-lambda:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":s3-object-lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":accesspoint/billing-s3olap-call-transcripts-known-pii",
                      ],
                    ],
                  },
                  "Sid": "AllowObjectLambdaAccess",
                },
                Object {
                  "Action": Array [
                    "s3:Get*",
                    "s3:List*",
                  ],
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowStandardAccessPointAccess",
                },
                Object {
                  "Action": "lambda:InvokeFunction",
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowLambdaInvocation",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "billing-role-s3olap-policy",
          },
        ],
        "RoleName": "RedactionBillingRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabBillingS3AccessPoint004BAF41": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabTranscriptBucket53AA37B3",
        },
        "Name": "bill-s3-access-point-call-transcripts-known-pii-70",
      },
      "Type": "AWS::S3::AccessPoint",
    },
    "ComprehendS3olabCustSupportRedactionCustSupportRole4A45EBAE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingObjects",
                },
                Object {
                  "Action": Array [
                    "s3:GetAccessPointForObjectLambda",
                    "s3:GetAccessPointConfigurationForObjectLambda",
                    "s3:ListAccessPointsForObjectLambda",
                    "s3:ListAllMyBuckets",
                    "s3:ListAccessPoints",
                    "s3:GetAccessPoint",
                    "s3:GetAccountPublicAccessBlock",
                    "s3:GetBucketPublicAccessBlock",
                    "s3:GetBucketPolicyStatus",
                    "s3:GetBucketAcl",
                    "s3:GetAccessPointPolicyStatus",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingBucketsAndAccessPoints",
                },
                Object {
                  "Action": Array [
                    "s3-object-lambda:Get*",
                    "s3-object-lambda:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":s3-object-lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":accesspoint/custsupport-s3olap-call-transcripts-known-pii",
                      ],
                    ],
                  },
                  "Sid": "AllowObjectLambdaAccess",
                },
                Object {
                  "Action": Array [
                    "s3:Get*",
                    "s3:List*",
                  ],
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowStandardAccessPointAccess",
                },
                Object {
                  "Action": "lambda:InvokeFunction",
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowLambdaInvocation",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customersupport-role-s3olap-policy",
          },
        ],
        "RoleName": "RedactionCustSupportRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabCustomSupportCaptorArnExpert825F1CC2": Object {
      "DependsOn": Array [
        "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45",
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3BucketDCC0FE97",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "A Lambda function that gets the ARN of \`PiiRedactionFunction\`",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "An execution role to find out the ARN of the access control Lambda.",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "lambda:ListFunctions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ListLambdaPermissions",
                },
                Object {
                  "Action": Array [
                    "lambda:GetFunction",
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:*",
                      ],
                    ],
                  },
                  "Sid": "GetLambdaFunctionsPermissions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ComprehendS3ObjectLambdaCustomResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabCustomSupportCaptorCustSupportGeneralSearchUnit11D981FC": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "Genre": "CustSupport",
        "LambdaFixedName": "PiiRedactionFunction",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabCustomSupportCaptorProviderframeworkonEvent551BC29F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabCustomSupportCaptorProviderframeworkonEvent551BC29F": Object {
      "DependsOn": Array [
        "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45",
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (ker-ker/ComprehendS3olab/CustomSupportCaptor/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "ComprehendS3olabCustomSupportCaptorArnExpert825F1CC2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabCustomSupportCaptorProviderframeworkonEventLogRetention12C3B310": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ComprehendS3olabCustomSupportCaptorProviderframeworkonEvent551BC29F",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ComprehendS3olabCustomerSupportLambdaAccessPoint80111B00": Object {
      "DependsOn": Array [
        "ComprehendS3olabCustomSupportCaptorArnExpert825F1CC2",
        "ComprehendS3olabCustomSupportCaptorCRRoleFCF60F45",
        "ComprehendS3olabCustomSupportCaptorCustSupportGeneralSearchUnit11D981FC",
        "ComprehendS3olabCustomSupportCaptorProviderframeworkonEventLogRetention12C3B310",
        "ComprehendS3olabCustomSupportCaptorProviderframeworkonEvent551BC29F",
      ],
      "Properties": Object {
        "Name": "custsupport-s3olap-call-transcripts-known-pii",
        "ObjectLambdaConfiguration": Object {
          "SupportingAccessPoint": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":s3:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":accesspoint/cs-s3-access-point-call-transcripts-known-pii-g1n4",
              ],
            ],
          },
          "TransformationConfigurations": Array [
            Object {
              "Actions": Array [
                "GetObject",
              ],
              "ContentTransformation": Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabCustomerSupportObjectLambdaConfigC8BCFACA",
                  "Value",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::S3ObjectLambda::AccessPoint",
    },
    "ComprehendS3olabCustomerSupportObjectLambdaConfigC8BCFACA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"AwsLambda\\":{\\"FunctionArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabCustomSupportCaptorCustSupportGeneralSearchUnit11D981FC",
                  "LambdaArn",
                ],
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabCustomerSupportS3AccessPoint3ACAB0D9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabTranscriptBucket53AA37B3",
        },
        "Name": "cs-s3-access-point-call-transcripts-known-pii-g1n4",
      },
      "Type": "AWS::S3::AccessPoint",
    },
    "ComprehendS3olabGeneralCaptorArnExpertCFD71883": Object {
      "DependsOn": Array [
        "ComprehendS3olabGeneralCaptorCRRole0611BA9D",
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3BucketDCC0FE97",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5e645fe76151b72841fcc724ad5e4f195a5ae0374c3a44f2607ee23400f2d2b4S3VersionKeyCAF59EF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "A Lambda function that gets the ARN of \`PiiAccessControlFunction\`",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabGeneralCaptorCRRole0611BA9D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabGeneralCaptorCRRole0611BA9D": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "An execution role to find out the ARN of the access control Lambda.",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "lambda:ListFunctions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ListLambdaPermissions",
                },
                Object {
                  "Action": Array [
                    "lambda:GetFunction",
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:*",
                      ],
                    ],
                  },
                  "Sid": "GetLambdaFunctionsPermissions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ComprehendS3ObjectLambdaCustomResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabGeneralCaptorGeneralGeneralSearchUnit6BC44755": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "Genre": "General",
        "LambdaFixedName": "PiiAccessControlFunction",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabGeneralCaptorProviderframeworkonEvent1AFD8B14",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabGeneralCaptorProviderframeworkonEvent1AFD8B14": Object {
      "DependsOn": Array [
        "ComprehendS3olabGeneralCaptorCRRole0611BA9D",
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (ker-ker/ComprehendS3olab/GeneralCaptor/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "ComprehendS3olabGeneralCaptorArnExpertCFD71883",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ComprehendS3olabGeneralCaptorCRRole0611BA9D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ComprehendS3olabGeneralCaptorProviderframeworkonEventLogRetention7161F315": Object {
      "DependsOn": Array [
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ComprehendS3olabGeneralCaptorProviderframeworkonEvent1AFD8B14",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ComprehendS3olabGeneralIamRoleC0C6DC2A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingObjects",
                },
                Object {
                  "Action": Array [
                    "s3:GetAccessPointForObjectLambda",
                    "s3:GetAccessPointConfigurationForObjectLambda",
                    "s3:ListAccessPointsForObjectLambda",
                    "s3:ListAllMyBuckets",
                    "s3:ListAccessPoints",
                    "s3:GetAccessPoint",
                    "s3:GetAccountPublicAccessBlock",
                    "s3:GetBucketPublicAccessBlock",
                    "s3:GetBucketPolicyStatus",
                    "s3:GetBucketAcl",
                    "s3:GetAccessPointPolicyStatus",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowListingBucketsAndAccessPoints",
                },
                Object {
                  "Action": Array [
                    "s3-object-lambda:Get*",
                    "s3-object-lambda:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":s3-object-lambda:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":accesspoint/accessctl-s3olap-survey-results-unknown-pii",
                      ],
                    ],
                  },
                  "Sid": "AllowObjectLambdaAccess",
                },
                Object {
                  "Action": Array [
                    "s3:Get*",
                    "s3:List*",
                  ],
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowStandardAccessPointAccess",
                },
                Object {
                  "Action": "lambda:InvokeFunction",
                  "Condition": Object {
                    "ForAnyValue:StringEquals": Object {
                      "aws:CalledVia": Array [
                        "s3-object-lambda.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowLambdaInvocation",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "general-role-s3olap-policy",
          },
        ],
        "RoleName": "GeneralRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "ComprehendS3olabGeneralLambdaAccessPoint02C30CE4": Object {
      "DependsOn": Array [
        "ComprehendS3olabGeneralCaptorArnExpertCFD71883",
        "ComprehendS3olabGeneralCaptorCRRole0611BA9D",
        "ComprehendS3olabGeneralCaptorGeneralGeneralSearchUnit6BC44755",
        "ComprehendS3olabGeneralCaptorProviderframeworkonEventLogRetention7161F315",
        "ComprehendS3olabGeneralCaptorProviderframeworkonEvent1AFD8B14",
      ],
      "Properties": Object {
        "Name": "accessctl-s3olap-survey-results-unknown-pii",
        "ObjectLambdaConfiguration": Object {
          "SupportingAccessPoint": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":s3:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":accesspoint/accessctl-s3-ap-survey-results-unknown-pii-0u8jyh",
              ],
            ],
          },
          "TransformationConfigurations": Array [
            Object {
              "Actions": Array [
                "GetObject",
              ],
              "ContentTransformation": Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabGeneralObjectLambdaConfig9963CC93",
                  "Value",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::S3ObjectLambda::AccessPoint",
    },
    "ComprehendS3olabGeneralObjectLambdaConfig9963CC93": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"AwsLambda\\":{\\"FunctionArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ComprehendS3olabGeneralCaptorGeneralGeneralSearchUnit6BC44755",
                  "LambdaArn",
                ],
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36": Object {
      "Properties": Object {
        "Location": Object {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:839782855223:applications/ComprehendPiiAccessControlS3ObjectLambda",
          "SemanticVersion": "1.0.2",
        },
        "Parameters": Object {
          "ConfidenceThreshold": "0.5",
          "ContainsPiiEntitiesThreadCount": "20",
          "DefaultLanguageCode": "en",
          "DocumentMaxSize": "102400",
          "DocumentMaxSizeContainsPiiEntities": "50000",
          "IsPartialObjectSupported": "false",
          "LogLevel": "INFO",
          "MaxCharsOverlap": "200",
          "PiiEntityTypes": "ALL",
          "PublishCloudWatchMetrics": "true",
          "SubsegmentOverlappingTokens": "20",
          "UnsupportedFileHandling": "FAIL",
        },
        "Tags": Object {
          "Genre": "General",
        },
      },
      "Type": "AWS::Serverless::Application",
    },
    "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC": Object {
      "Properties": Object {
        "Location": Object {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:839782855223:applications/ComprehendPiiRedactionS3ObjectLambda",
          "SemanticVersion": "1.0.2",
        },
        "Parameters": Object {
          "ConfidenceThreshold": "0.5",
          "ContainsPiiEntitiesThreadCount": "20",
          "DefaultLanguageCode": "en",
          "DetectPiiEntitiesThreadCount": "8",
          "DocumentMaxSize": "102400",
          "DocumentMaxSizeContainsPiiEntities": "50000",
          "DocumentMaxSizeDetectPiiEntities": "5000",
          "IsPartialObjectSupported": "false",
          "LogLevel": "INFO",
          "MaskCharacter": "*",
          "MaskMode": "MASK",
          "MaxCharsOverlap": "200",
          "PiiEntityTypes": "ALL",
          "PublishCloudWatchMetrics": "true",
          "SubsegmentOverlappingTokens": "20",
          "UnsupportedFileHandling": "FAIL",
        },
        "Tags": Object {
          "Genre": "Admin",
        },
      },
      "Type": "AWS::Serverless::Application",
    },
    "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E": Object {
      "Properties": Object {
        "Location": Object {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:839782855223:applications/ComprehendPiiRedactionS3ObjectLambda",
          "SemanticVersion": "1.0.2",
        },
        "Parameters": Object {
          "ConfidenceThreshold": "0.5",
          "ContainsPiiEntitiesThreadCount": "20",
          "DefaultLanguageCode": "en",
          "DetectPiiEntitiesThreadCount": "8",
          "DocumentMaxSize": "102400",
          "DocumentMaxSizeContainsPiiEntities": "50000",
          "DocumentMaxSizeDetectPiiEntities": "5000",
          "IsPartialObjectSupported": "false",
          "LogLevel": "INFO",
          "MaskCharacter": "*",
          "MaskMode": "MASK",
          "MaxCharsOverlap": "200",
          "PiiEntityTypes": "ALL",
          "PublishCloudWatchMetrics": "true",
          "SubsegmentOverlappingTokens": "20",
          "UnsupportedFileHandling": "FAIL",
        },
        "Tags": Object {
          "Genre": "Billing",
        },
      },
      "Type": "AWS::Serverless::Application",
    },
    "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8": Object {
      "Properties": Object {
        "Location": Object {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:839782855223:applications/ComprehendPiiRedactionS3ObjectLambda",
          "SemanticVersion": "1.0.2",
        },
        "Parameters": Object {
          "ConfidenceThreshold": "0.5",
          "ContainsPiiEntitiesThreadCount": "20",
          "DefaultLanguageCode": "en",
          "DetectPiiEntitiesThreadCount": "8",
          "DocumentMaxSize": "102400",
          "DocumentMaxSizeContainsPiiEntities": "50000",
          "DocumentMaxSizeDetectPiiEntities": "5000",
          "IsPartialObjectSupported": "false",
          "LogLevel": "INFO",
          "MaskCharacter": "*",
          "MaskMode": "MASK",
          "MaxCharsOverlap": "200",
          "PiiEntityTypes": "ALL",
          "PublishCloudWatchMetrics": "true",
          "SubsegmentOverlappingTokens": "20",
          "UnsupportedFileHandling": "FAIL",
        },
        "Tags": Object {
          "Genre": "CustSupport",
        },
      },
      "Type": "AWS::Serverless::Application",
    },
    "ComprehendS3olabSurveyResultBucketAED4B852": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabGeneralIamRoleC0C6DC2A",
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "BucketName": "survey-results-unknown-pii-hbgeig",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabSurveyResultBucketAutoDeleteObjectsCustomResource22DA23D3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabGeneralIamRoleC0C6DC2A",
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
        "ComprehendS3olabSurveyResultBucketPolicy54D487B7",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "ComprehendS3olabSurveyResultBucketAED4B852",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabSurveyResultBucketPolicy54D487B7": Object {
      "DependsOn": Array [
        "ComprehendS3olabGeneralIamRoleC0C6DC2A",
        "ComprehendS3olabServerlessLambdaComprehendPiiAccessControlS3ObjectLambdaC1DAEB36",
      ],
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabSurveyResultBucketAED4B852",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ComprehendS3olabSurveyResultBucketAED4B852",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ComprehendS3olabSurveyResultBucketAED4B852",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:DataAccessPointAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ComprehendS3olabSurveyResultBucketAED4B852",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "AWSBucketGetPolicy",
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ComprehendS3olabSurveyResultBucketAED4B852",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "AWSBucketPutPolicy",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ComprehendS3olabTranscriptBucket53AA37B3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabAdminRedactionAdminRoleD5BCEEB1",
        "ComprehendS3olabBillingRedactionBillingRole41091C3B",
        "ComprehendS3olabCustSupportRedactionCustSupportRole4A45EBAE",
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "BucketName": "call-transcripts-known-pii-eal7qm",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabTranscriptBucketAutoDeleteObjectsCustomResource6042D5C2": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ComprehendS3olabAdminRedactionAdminRoleD5BCEEB1",
        "ComprehendS3olabBillingRedactionBillingRole41091C3B",
        "ComprehendS3olabCustSupportRedactionCustSupportRole4A45EBAE",
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
        "ComprehendS3olabTranscriptBucketPolicyDC391B43",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "ComprehendS3olabTranscriptBucket53AA37B3",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ComprehendS3olabTranscriptBucketPolicyDC391B43": Object {
      "DependsOn": Array [
        "ComprehendS3olabAdminRedactionAdminRoleD5BCEEB1",
        "ComprehendS3olabBillingRedactionBillingRole41091C3B",
        "ComprehendS3olabCustSupportRedactionCustSupportRole4A45EBAE",
        "ComprehendS3olabServerlessRedactLambdaAdminComprehendPiiAccessControlS3ObjectLambdaD15B85DC",
        "ComprehendS3olabServerlessRedactLambdaBillingComprehendPiiAccessControlS3ObjectLambda6C419F7E",
        "ComprehendS3olabServerlessRedactLambdaCustSupportComprehendPiiAccessControlS3ObjectLambda376EF5E8",
      ],
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ComprehendS3olabTranscriptBucket53AA37B3",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ComprehendS3olabTranscriptBucket53AA37B3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ComprehendS3olabTranscriptBucket53AA37B3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:DataAccessPointAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ComprehendS3olabTranscriptBucket53AA37B3",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "AWSBucketGetPolicy",
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ComprehendS3olabTranscriptBucket53AA37B3",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "AWSBucketPutPolicy",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "ComprehendS3olabSurveyResultBucketAED4B852",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Transform": Array [
    "AWS::Serverless-2016-10-31",
  ],
}
`;
